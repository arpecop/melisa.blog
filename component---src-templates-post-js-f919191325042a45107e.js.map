{"version":3,"sources":["webpack:///./src/components/ShareIcon.js","webpack:///./src/components/ShareContainer.js","webpack:///./src/templates/post.js"],"names":["ShareIcon","shareUrl","children","to","target","rel","ShareArea","styled","div","ShareCont","facebook","twitter","linkedin","href","BlogPostStyles","Template","data","location","useLocation","markdownRemark","frontmatter","html","featuredImgFluid","featuredImage","childImageSharp","fluid","title","description","Banner","content","date","author","className","dangerouslySetInnerHTML","__html","Button","text","tags","map","tagName","index","key"],"mappings":"2OAWeA,EARG,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC7B,OACE,kBAAC,OAAD,CAAMC,GAAIF,EAAUG,OAAO,SAASC,IAAI,wBACrCH,I,YCDDI,EAAYC,IAAOC,IAAV,4EAAGD,CAAH,uFAyCAE,EA3BG,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAChD,OACE,kBAACP,EAAD,KACE,0CACCK,GACC,kBAAC,EAAD,CAAWV,SAAQ,wCAA0CY,GAC3D,kBAAC,IAAD,OAGHH,GACC,kBAAC,EAAD,CACET,SAAQ,yCAA2CY,EAA3C,OAER,kBAAC,IAAD,OAGHD,GACC,kBAAC,EAAD,CACEX,SAAQ,uDAAyDY,GAEjE,kBAAC,IAAD,S,wBC7BJC,EAAiBP,IAAOC,IAAV,2EAAGD,CAAH,gmBAsDL,SAASQ,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAC7BC,EAAWC,wBACPC,EAAmBH,EAAnBG,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACjBC,EACFH,EAAeC,YAAYG,cAAcC,gBAAgBC,MAE3D,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAON,EAAYM,MAAOC,YAAaP,EAAYO,cACxD,kBAACb,EAAD,KACE,kBAACc,EAAA,EAAD,CAAQC,QAAST,EAAYM,SAI3BN,EAAYU,MAAQV,EAAYW,SAChC,2BAAOC,UAAU,QACf,sCAEUZ,EAAYU,MAAZ,KAAyBV,EAAYU,KAAQ,IAEpDV,EAAYW,QAAZ,KAA2BX,EAAYW,SAM7CT,GACC,yBAAKU,UAAU,YACb,kBAAC,IAAD,CAAKP,MAAOH,KAGhB,yBACEU,UAAU,oBACVC,wBAAyB,CAAEC,OAAQb,KAErC,6BACA,kBAAC,OAAD,CAAMlB,GAAG,WAAW6B,UAAU,YAC5B,kBAACG,EAAA,EAAD,CAAQC,KAAK,4BAIdhB,EAAYiB,MACX,oCACE,6BACA,6CACiB,IACdjB,EAAYiB,KAAKC,KAAI,SAACC,EAASC,GAC9B,OACE,kBAAC,OAAD,CAAMrC,GAAE,SAAWoC,EAAWE,IAAKD,GAChCD,QAOb,6BACA,kBAAC,EAAD,CAAO7B,UAAQ,EAACC,SAAO,EAACC,UAAQ,EAACC,KAAMI,EAASJ","file":"component---src-templates-post-js-f919191325042a45107e.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst ShareIcon = ({ shareUrl, children }) => {\n  return (\n    <Link to={shareUrl} target=\"_blank\" rel=\"noopenner noreferrer\">\n      {children}\n    </Link>\n  )\n}\n\nexport default ShareIcon\n","import React from \"react\"\nimport { FaTwitter, FaLinkedin, FaFacebook } from \"react-icons/fa\"\nimport ShareIcon from \"./ShareIcon\"\nimport styled from \"styled-components\"\n\nconst ShareArea = styled.div`\n  svg {\n    width: 30px;\n    height: 30px;\n    margin-right: var(--spacing);\n  }\n\n  a {\n    &:after {\n      display: none;\n    }\n  }\n`\n\nconst ShareCont = ({ facebook, twitter, linkedin, href }) => {\n  return (\n    <ShareArea>\n      <h4>Share This</h4>\n      {twitter && (\n        <ShareIcon shareUrl={`https://twitter.com/intent/tweet?url=${href}`}>\n          <FaTwitter />\n        </ShareIcon>\n      )}\n      {facebook && (\n        <ShareIcon\n          shareUrl={`https://www.facebook.com/sharer.php?u=${href}%2F`}\n        >\n          <FaFacebook />\n        </ShareIcon>\n      )}\n      {linkedin && (\n        <ShareIcon\n          shareUrl={`https://www.linkedin.com/sharing/share-offsite/?url=${href}`}\n        >\n          <FaLinkedin />\n        </ShareIcon>\n      )}\n    </ShareArea>\n  )\n}\n\nexport default ShareCont\n","import React from \"react\"\nimport { useLocation } from \"@reach/router\"\nimport { Link, graphql } from \"gatsby\"\nimport Seo from \"../components/SEO\"\nimport Img from \"gatsby-image\"\nimport Share from \"../components/ShareContainer\"\nimport Button from \"../components/Button\"\nimport Banner from \"../components/Banner\"\nimport styled from \"styled-components\"\n\nconst BlogPostStyles = styled.div`\n  .meta {\n    h2 {\n      font-size: var(--h4);\n      color: var(--primaryColor);\n      margin: calc(var(--spacing) / 2) 0;\n    }\n  }\n\n  .post-img {\n    margin: calc(var(--spacing) * 2) 0;\n\n    @media (min-width: 1200px) {\n      margin: calc(var(--spacing) * 4) 0;\n    }\n  }\n\n  font-weight: 400;\n  font-size: var(--h4);\n  color: var(--primaryColor);\n\n  a {\n    text-decoration: none;\n    margin-right: calc(var(--spacing) / 2);\n    position: relative;\n\n    &:after {\n      content: \"\";\n      display: block;\n      position: absolute;\n      height: 0.1rem;\n      width: 100%;\n      background-color: var(--charcoal);\n      left: 0;\n      bottom: -0.25rem;\n      opacity: 1;\n      transition: opacity var(--transSlow);\n    }\n\n    &:hover,\n    &:focus {\n      cursor: pointer;\n\n      &:after {\n        opacity: 0.15;\n      }\n    }\n\n    &::last-child {\n      margin-right: 0;\n    }\n  }\n`\n\nexport default function Template({ data }) {\n  let location = useLocation()\n  const { markdownRemark } = data // Object destructuring\n  const { frontmatter, html } = markdownRemark // Object destructuring og markdownRemark\n  let featuredImgFluid =\n    markdownRemark.frontmatter.featuredImage.childImageSharp.fluid\n\n  return (\n    <>\n      <Seo title={frontmatter.title} description={frontmatter.description} />\n      <BlogPostStyles>\n        <Banner content={frontmatter.title} />\n\n        {/* Check if date or author has been declared in MD file\n        If so, render the meta */}\n        {(frontmatter.date || frontmatter.author) && (\n          <aside className=\"meta\">\n            <h2>\n              {/* If there is date, display it */}\n              Posted {frontmatter.date && `/ ${frontmatter.date}`}{\" \"}\n              {/* If there is author, display it */}\n              {frontmatter.author && `/ ${frontmatter.author}`}\n            </h2>\n          </aside>\n        )}\n\n        {/* If featured image is present, render featured image */}\n        {featuredImgFluid && (\n          <div className=\"post-img\">\n            <Img fluid={featuredImgFluid} />\n          </div>\n        )}\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        <hr />\n        <Link to=\"/journal\" className=\"btn-link\">\n          <Button text=\"Return to Journal Home\" />\n        </Link>\n\n        {/* If there are tags for the post, render this section */}\n        {frontmatter.tags && (\n          <>\n            <hr />\n            <h4>\n              Posted under /{\" \"}\n              {frontmatter.tags.map((tagName, index) => {\n                return (\n                  <Link to={`/tags/${tagName}`} key={index}>\n                    {tagName}\n                  </Link>\n                )\n              })}\n            </h4>\n          </>\n        )}\n        <hr />\n        <Share facebook twitter linkedin href={location.href} />\n      </BlogPostStyles>\n    </>\n  )\n}\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        tags\n        description\n        author\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
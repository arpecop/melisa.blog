{"version":3,"sources":["webpack:///./src/components/BlogItem.js","webpack:///./src/styles/JournalStyles.js","webpack:///./src/templates/journal-template.js"],"names":["BlogItemStyles","styled","article","BlogItem","props","index","excerpt","nodeObj","frontmatter","title","date","path","featuredImageAlt","fluid","featuredImage","childImageSharp","key","to","alt","className","PagerStyles","aside","JournalTemplate","edges","data","allMarkdownRemark","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","SEO","map","node","rel","Button","text","Array","from","length","_","i"],"mappings":"2FAAA,sEAOMA,EAPN,UAOuBC,EAAOC,QAAV,+EAAGD,CAAH,sgCAsILE,IAhDE,SAAAC,GAAU,IACjBC,EAAUD,EAAVC,MACAC,EAAYF,EAAMG,QAAlBD,QAFgB,EAGwBF,EAAMG,QAAQC,YAAtDC,EAHgB,EAGhBA,MAAOC,EAHS,EAGTA,KAAMC,EAHG,EAGHA,KAAMC,EAHH,EAGGA,iBACnBC,EAAUT,EAAMG,QAAQC,YAAYM,cAAcC,gBAAlDF,MAER,OACE,kBAACb,EAAD,CAAgBgB,IAAG,aAAeX,GAC/BQ,GACC,gCACE,kBAAC,OAAD,CAAMI,GAAIN,GACR,kBAAC,IAAD,CAAKE,MAAOA,EAAOK,IAAKN,MAK7BH,GACC,4BACE,kBAAC,OAAD,CAAMQ,GAAIN,GAAOF,IAIpBH,GACC,6BACE,2BAAIA,GACHK,GACC,yBAAKQ,UAAU,QACb,kBAAC,OAAD,CAAMA,UAAU,WAAWF,GAAIN,GAC7B,kBAAC,IAAD,OAEF,4BAAKD,Q,kHCzHNU,E,UAAcnB,EAAOoB,MAAV,6EAAGpB,CAAH,qd,UCsDTqB,UAhDS,SAAAlB,GAAU,IACxBmB,EAAUnB,EAAMoB,KAAKC,kBAArBF,MADuB,EAGGnB,EAAMsB,YAAhCC,EAHuB,EAGvBA,YAAaC,EAHU,EAGVA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,IAAMA,EAAc,GAAGK,WAC1DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,oCACE,kBAACE,EAAA,EAAD,CAAKzB,MAAM,yBAEVc,EAAMY,KAAI,WAAW9B,GAAW,IAAnB+B,EAAkB,EAAlBA,KACZ,OAAO,kBAACjC,EAAA,EAAD,CAAUI,QAAS6B,EAAM/B,MAAOA,OAIxCuB,EAAW,GACV,kBAACR,EAAD,KACE,yBAAKD,UAAU,SACXU,GACA,kBAAC,OAAD,CAAMZ,GAAE,YAAcc,EAAYM,IAAI,QACpC,kBAACC,EAAA,EAAD,CAAQC,KAAK,eAGfT,GACA,kBAAC,OAAD,CAAMb,GAAE,YAAcgB,EAAYI,IAAI,QACpC,kBAACC,EAAA,EAAD,CAAQC,KAAK,WAInB,yBAAKpB,UAAU,WACZqB,MAAMC,KAAK,CAAEC,OAAQd,IAAY,SAACe,EAAGC,GAAJ,OAChC,kBAAC,OAAD,CACE5B,IAAG,sBAAuB4B,EAAI,GAC9B3B,GAAE,aAAoB,IAAN2B,EAAU,GAAKA,EAAI,IAElCA,EAAI","file":"component---src-templates-journal-template-js-08d442d72ff2a66e4100.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Button from \"./Button\"\nimport Img from \"gatsby-image\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst BlogItemStyles = styled.article`\n  margin: calc(var(--spacing) * 4) 0;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto auto auto;\n  grid-gap: var(--spacing);\n\n  @media (min-width: 768px) {\n    margin: calc(var(--spacing) * 6) 0;\n    grid-template-rows: auto auto;\n    grid-gap: calc(var(--spacing) * 2);\n  }\n\n  @media (min-width: 1200px) {\n    margin: calc(var(--spacing) * 8) 0;\n    grid-gap: calc(var(--spacing) * 3);\n  }\n\n  > figure {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    overflow: hidden;\n    background-color: #000;\n    margin: 0;\n    opacity: 1;\n\n    img {\n      transition: transform var(--transSlow) ease, opacity var(--transSlow) ease !important;\n      opacity: 1;\n    }\n  }\n\n  &:hover {\n    > figure {\n      img {\n        transform: scale(1.1);\n        opacity: 0.5 !important;\n      }\n    }\n  }\n\n  h2 {\n    grid-column: 1 / 3;\n    grid-row: 2 / 3;\n    font-size: var(--h3);\n    margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  @media (min-width: 768px) {\n    h2 {\n      grid-column: 1 / 2;\n    }\n  }\n\n  > div {\n    grid-column: 1 / 3;\n    grid-row: 3 / 4;\n    p {\n      margin-top: 0;\n    }\n    @media (min-width: 768px) {\n      grid-column: 2 / 3;\n      grid-row: 2 / 3;\n\n      p {\n        margin-bottom: calc(var(--spacing) * 2);\n      }\n    }\n  }\n\n  .meta {\n    display: flex;\n    justify-content: space-between;\n\n    h4 {\n      margin: 0;\n      font-size: var(--h5);\n      color: var(--primaryColor);\n    }\n  }\n`\n\nconst BlogItem = props => {\n  const { index } = props\n  const { excerpt } = props.nodeObj\n  const { title, date, path, featuredImageAlt } = props.nodeObj.frontmatter\n  const { fluid } = props.nodeObj.frontmatter.featuredImage.childImageSharp\n\n  return (\n    <BlogItemStyles key={`blog-item-${index}`}>\n      {fluid && (\n        <figure>\n          <Link to={path}>\n            <Img fluid={fluid} alt={featuredImageAlt} />\n          </Link>\n        </figure>\n      )}\n\n      {title && (\n        <h2>\n          <Link to={path}>{title}</Link>\n        </h2>\n      )}\n\n      {excerpt && (\n        <div>\n          <p>{excerpt}</p>\n          {path && (\n            <div className=\"meta\">\n              <Link className=\"btn-link\" to={path}>\n                <Button />\n              </Link>\n              <h4>{date}</h4>\n            </div>\n          )}\n        </div>\n      )}\n    </BlogItemStyles>\n  )\n}\n\nBlogItem.propTypes = {\n  fluid: PropTypes.object,\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  excerpt: PropTypes.string,\n  path: PropTypes.string,\n  date: PropTypes.string,\n}\n\nexport default BlogItem\n","import styled from \"styled-components\"\n\nexport const PagerStyles = styled.aside`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto auto;\n  grid-gap: var(--spacing);\n  font-family: var(--serif);\n  font-size: var(--h5);\n\n  @media (min-width: 768px) {\n    grid-gap: calc(var(--spacing) * 2);\n  }\n\n  @media (min-width: 1200px) {\n    grid-gap: calc(var(--spacing) * 3);\n  }\n\n  a {\n    color: var(--black);\n    text-decoration: none;\n  }\n\n  .btns {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .numbers {\n    grid-column: 1 / 3;\n    grid-row: 2 / 3;\n\n    a {\n      padding-right: var(--spacing);\n    }\n  }\n`\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport SEO from \"../components/SEO\"\nimport BlogItem from \"../components/BlogItem\"\nimport Button from \"../components/Button\"\nimport { PagerStyles } from \"../styles/JournalStyles\"\nimport Banner from \"../components/Banner\"\n\nconst JournalTemplate = props => {\n  const { edges } = props.data.allMarkdownRemark\n\n  const { currentPage, numPages } = props.pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? \"\" : (currentPage - 1).toString()\n  const nextPage = (currentPage + 1).toString()\n\n  return (\n    <>\n      <SEO title=\"Beauty tips for 2021\" />\n\n      {edges.map(({ node }, index) => {\n        return <BlogItem nodeObj={node} index={index} />\n      })}\n      {/* Paging controls\n        If there are multiple pages, show pager */}\n      {numPages > 1 && (\n        <PagerStyles>\n          <div className=\"btns\">\n            {!isFirst && (\n              <Link to={`/journal/${prevPage}`} rel=\"prev\">\n                <Button text=\"Previous\" />\n              </Link>\n            )}\n            {!isLast && (\n              <Link to={`/journal/${nextPage}`} rel=\"next\">\n                <Button text=\"Next\" />\n              </Link>\n            )}\n          </div>\n          <div className=\"numbers\">\n            {Array.from({ length: numPages }, (_, i) => (\n              <Link\n                key={`pagination-numbers${i + 1}`}\n                to={`/journal/${i === 0 ? \"\" : i + 1}`}\n              >\n                {i + 1}\n              </Link>\n            ))}\n          </div>\n        </PagerStyles>\n      )}\n    </>\n  )\n}\n\nexport default JournalTemplate\n\nexport const journalQuery = graphql`\n  query journalQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YY\")\n            path\n            tags\n            featuredImage {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}